ОТОБРАЖЕНИЕ В КОНСОЛЬ РЕЗУЛЬТАТОВ РАБОТЫ

Единичная задача отображается следующим образом

[<type>|<parameter>|status:<in progress || wait>|blocked: <T (true) || F (false)]
пример - [B|2|status:in process|blocked:F]

При поступлении новой задачи отображается сообщение :

Entered new task - [B|7|status:wait      |blocked:F]
При этом задача ещё не добавлена в очередь


Так же после добавления новой задачи отображается состоянии очереди
-------------------------------------------------Queues
num : 0|Type: B|Size:1|tasks -- [B|7|status:wait      |blocked:F] 
num : 1|Type:no|Size:0|tasks -- 
num : 2|Type:no|Size:0|tasks -- 
num : 3|Type:no|Size:0|tasks -- 
num : 4|Type:no|Size:0|tasks -- 
num : 5|Type:no|Size:0|tasks -- 
num : 6|Type:no|Size:0|tasks -- 
num : 7|Type:no|Size:0|tasks -- 
num : 8|Type:no|Size:0|tasks -- 
num : 9|Type:no|Size:0|tasks -- 
-------------------------------------------------

Если есть свободные очереди, задача сразу поступает на исполнение и отображается сообщение
Processing start for task : [B|7|status:in process|blocked:F] in queue 0

После завершения задачи отображается сообщение 
Processing end for task : [B|1|status:in process|blocked:F] in queue 6

Когда когда установленное колличество задач из теста будет передано, потокам будет отправлен сигнал на завершение.
После чего, выполнив все оставшиеся задачи потоки завершатся, отобразив следующее :

***** END THREAD <номер очереди>

После чего приложение завершится с выводом в консоль :

The application has completed its work





!!! ДЛЯ БОЛЬШЕЙ НАГЛЯДНОСТИ ЗАПОЛНЕНИЯ ОЧЕРЕДЕЙ ПРИ ВЫПОЛНЕНИИ ЗАДАЧ УСТАНОВЛЕНА ЗАДЕРЖКА. 





ВЫБОР ОЧЕРЕДИ ИСПОЛНЕНИЯ ДЛЯ ЗАДАЧИ

Перед добавлением задачи класс QueueInfo собирает информацию о очередях для дальнейшего выбора наиболее подходящей очереди для пришедшей задачи. Выбор происходить по следующим правилам :

1. Если заполено менее половины очередей выбирается любая свободная очередь
2. Если заполнено более половины доступных очередей и при этом очередей с типом, совпадающим с типом входящего таска меньше половины от общего колличества очередей, то так же как и в предыдущем случае выбирается любая свободная очередь.
3. В противном случае если у очередей с типом, соответствующим, типу входящего таска "плотность заполнения" больше чем у очередей другого типа, то так же выбирается любая свободная очередь (за исключением случая, если это последняя очередь и отсутствуют очереди другого типа).
4. В остальных случаях выбирается очередь с соответсвующим типом и минимальным колличеством тасков.

Под "плотностью заполнения" понимается колличество всех задач одного типа во всех очередях, делённое на колличество очередей данного типа.


СОБЛЮДЕНИЕ ПРАВИЛА ОБРАБОТКИ ЗАДАЧ С ОДИНАКОВЫМ ПАРАМЕТРОМ

Для соблюдения данного условия ссылка на каждую задачу с уникальным параметром сохраняется в классе TasksHash. И если поступает задача с параметром, уже находящимся в данной таблице, то для задачи устанавливается блокировка, при которой поток не может взять её на обработку. Так же ссылка на вновь пришедшую задачу помещается в уже существующую в таблице задачу, как следующая к исполнению. 

Просле обработки потоком задача изымается из таблицы, либо в случае, если у неё есть дочерние элементы заменяется на свою дочернюю задачу. У дочерней задачи при этом снимается блокировка, и поток может взять её на исполнение.
















